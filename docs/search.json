[
  {
    "objectID": "CONTRIBUTING.html",
    "href": "CONTRIBUTING.html",
    "title": "Contribution Agreement",
    "section": "",
    "text": "Contribution Agreement\nThis repository does not accept pull requests (PRs). All pull requests will be closed.\nHowever, if any contributions (through pull requests, issues, feedback or otherwise) are provided, as a contributor, you represent that the code you submit is your original work or that of your employer (in which case you represent you have the right to bind your employer). By submitting code (or otherwise providing feedback), you (and, if applicable, your employer) are licensing the submitted code (and/or feedback) to LinkedIn and the open source community subject to the BSD 2-Clause license."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "A Blog With Python Thanks to Quarto",
    "section": "",
    "text": "Welcome to my data (and sometimes coffee) blog.\n\n\n\n\n\n\n\n\n\n\n_brand.yml for styling your blog\n\n\n\n\n\n\n\n\nAug 19, 2025\n\n\nCharlotte Hadley\n\n\n\n\n\n\n\n\n\n\n\n\nBootstrap and Quarto blogs\n\n\n\n\n\n\n\n\nAug 18, 2025\n\n\nCharlotte Hadley\n\n\n\n\n\n\n\n\n\n\n\n\nAdvice for more complex posts\n\n\n\nadvice\n\ncode\n\n\n\n\n\n\n\n\n\nAug 15, 2025\n\n\nCharlotte Hadley\n\n\n\n\n\n\n\n\n\n\n\n\nInteractive charts\n\n\n\ncode\n\ndataviz\n\n\n\n\n\n\n\n\n\nAug 12, 2025\n\n\nCharlotte Hadley\n\n\n\n\n\n\n\n\n\n\n\n\nHello World with the Palmer Penguins\n\n\n\ncode\n\ndataviz\n\n\n\n\n\n\n\n\n\nAug 8, 2025\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "coffee-blog.html",
    "href": "coffee-blog.html",
    "title": "Coffee Blog",
    "section": "",
    "text": "You might want your blog to have multiple listings.\nFor instance most of your content is about Python and data so that’s what most people will be interested in. But you might also be passionate about coffee, embroidery, 14th Century cuisine or something else.\nOr… thinking more practically you might have a listing for blogposts and another for your podcast episodes! Quarto has great flexibility for that - as you can see here.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDareshack: It’s not a dare, it’s just a great choice.\n\n\n\n\n\n\n\n\n\nAug 8, 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\nCortado: When and why?\n\n\n\n\n\n\n\n\n\nAug 8, 2025\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "coffee-reviews/dareshack/index.html",
    "href": "coffee-reviews/dareshack/index.html",
    "title": "Dareshack: It’s not a dare, it’s just a great choice.",
    "section": "",
    "text": "Dareshack is probably my favourite place to get a coffee in Bristol."
  },
  {
    "objectID": "posts/2025-08-12_interactive-charts/index.html",
    "href": "posts/2025-08-12_interactive-charts/index.html",
    "title": "Interactive charts",
    "section": "",
    "text": "Have you heard about Jupyter Widgets for embedding interactivite elements in Jupyter documents?\n\nWell! Because Quarto uses Jupyter for rendering Python content that means you can also use these widgets in your data blog!\nAs an example, here’s a map centered on the Royal Observatory Greenwich:\n\nfrom ipyleaflet import Map, Marker, basemaps, basemap_to_tiles\nm = Map(\n  basemap=basemap_to_tiles(\n    basemaps.NASAGIBS.ModisTerraTrueColorCR, \"2017-04-08\"\n  ),\n  center=(51.476852, -0.000500),\n  zoom=4\n)\nm.add_layer(Marker(location=(51.476852, -0.000500)))\nm"
  },
  {
    "objectID": "posts/2025-08-08_hello-world-with-palmer-penguins/index.html",
    "href": "posts/2025-08-08_hello-world-with-palmer-penguins/index.html",
    "title": "Hello World with the Palmer Penguins",
    "section": "",
    "text": "The penguins dataset is always useful!!\n\nfrom palmerpenguins import load_penguins\nimport pandas as pd\nimport numpy as np\n\npenguins_df = load_penguins()\npenguins_cleaned_df = penguins_df.dropna()\n\nspecies_counts = penguins_cleaned_df['species'].value_counts()\n\n\nShowing Matplotlib Charts\nWe can display matplotlib charts directly:\n\nimport matplotlib.pyplot as plt\n\nplot = plt.figure()\nplot.set_figwidth(6)\nplot.set_figheight(3)\n\nplt.bar(species_counts.index, species_counts.values)"
  },
  {
    "objectID": "posts/2025-08-14_advice-for-more-complex-posts/index.html",
    "href": "posts/2025-08-14_advice-for-more-complex-posts/index.html",
    "title": "Advice for more complex posts",
    "section": "",
    "text": "As your blogposts become more complex you might feel it’s overwhelming having all of your code in the index.qmd file\nGreat news! It’s easy to run a script file from a blogpost using a code chunk that looks like this:"
  },
  {
    "objectID": "posts/2025-08-14_advice-for-more-complex-posts/index.html#analysis",
    "href": "posts/2025-08-14_advice-for-more-complex-posts/index.html#analysis",
    "title": "Advice for more complex posts",
    "section": "Analysis",
    "text": "Analysis\nThis script performs a K-Means clustering on the palmer penguins dataset.\nOut of 333 penguins, our model misclassified 5.0% of the penguins.\nThe model has these parameters:\n\nNumber of Clusters: 3\nMax Iterations: 300\n\nThis plotnine chart exposes where penguins were misclassified:"
  },
  {
    "objectID": "coffee-reviews/cortado/index.html",
    "href": "coffee-reviews/cortado/index.html",
    "title": "Cortado: When and why?",
    "section": "",
    "text": "I really enjoy a cortado. But they’re very disappointing when made badly, so my rule is I only order them after an initial visit to a cafe or a very strong endorsement from a friend."
  },
  {
    "objectID": "data-blog.html",
    "href": "data-blog.html",
    "title": "Blog",
    "section": "",
    "text": "You’ll find all of my data blogposts here. There are tutorial posts, data explorations, charts and more abstract posts.\nI’ve got a separate listing for my coffee posts\n\nBlog\n\n\n\n\n\n\n\n\n\n\n_brand.yml for styling your blog\n\n\n\n\n\n\n\n\nAug 19, 2025\n\n\nCharlotte Hadley\n\n\n\n\n\n\n\n\n\n\n\n\nBootstrap and Quarto blogs\n\n\n\n\n\n\n\n\nAug 18, 2025\n\n\nCharlotte Hadley\n\n\n\n\n\n\n\n\n\n\n\n\nAdvice for more complex posts\n\n\n\nadvice\n\ncode\n\n\n\n\n\n\n\n\n\nAug 15, 2025\n\n\nCharlotte Hadley\n\n\n\n\n\n\n\n\n\n\n\n\nInteractive charts\n\n\n\ncode\n\ndataviz\n\n\n\n\n\n\n\n\n\nAug 12, 2025\n\n\nCharlotte Hadley\n\n\n\n\n\n\n\n\n\n\n\n\nHello World with the Palmer Penguins\n\n\n\ncode\n\ndataviz\n\n\n\n\n\n\n\n\n\nAug 8, 2025\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Quarto is an incredible tool for communicating with data via Python. Using Quarto you can build reports, slide decks, and blogs (just like this one!)."
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code."
  },
  {
    "objectID": "side-projects.html",
    "href": "side-projects.html",
    "title": "Charlotte’s side projects",
    "section": "",
    "text": "I have a few side projects I’m working on, some are in data but I’m also working on expanding my creativity."
  },
  {
    "objectID": "side-projects.html#data-projects",
    "href": "side-projects.html#data-projects",
    "title": "Charlotte’s side projects",
    "section": "Data projects",
    "text": "Data projects\n\nShiny fishing game\nA project to explore game design.\n\n\nTidy tuesday dataset explorer\nWhich datasets have 5 categorical variables?"
  },
  {
    "objectID": "side-projects.html#creative-projects",
    "href": "side-projects.html#creative-projects",
    "title": "Charlotte’s side projects",
    "section": "Creative projects",
    "text": "Creative projects\n\nBaking\nSurely I can make better scones?"
  },
  {
    "objectID": "posts/2025-08-18_bootstrap/index.html",
    "href": "posts/2025-08-18_bootstrap/index.html",
    "title": "Bootstrap and Quarto blogs",
    "section": "",
    "text": "Bootstrap is great!"
  },
  {
    "objectID": "side-projects/shiny-fishing-project/index.html",
    "href": "side-projects/shiny-fishing-project/index.html",
    "title": "Shiny Fishing Game",
    "section": "",
    "text": "Shiny is an incredibly framework for building interactive dashboards, web apps and more directly from Python.\nFishing minigames in Stardew Valley and similar games are really interesting to me. I have a side project exploring how different mathematical functions are used to create “bouncy” or “squelchy” bumps in the animations. There’s not much to share yet…"
  },
  {
    "objectID": "posts/2025-08-19_brand-yml/index.html",
    "href": "posts/2025-08-19_brand-yml/index.html",
    "title": "_brand.yml for styling your blog",
    "section": "",
    "text": "You might want to use brand colours in HTML using Shortcodes…"
  },
  {
    "objectID": "posts/2025-08-19_brand-yml/index.html#accessing-_brand.yml-in-python-code",
    "href": "posts/2025-08-19_brand-yml/index.html#accessing-_brand.yml-in-python-code",
    "title": "_brand.yml for styling your blog",
    "section": "Accessing _brand.yml in python code…",
    "text": "Accessing _brand.yml in python code…\n\nfrom brand_yml import Brand\nbrand = Brand.from_yaml(\"../../_brand.yml\")\nbrand.color.palette\n\n{'neutral': '#F9F7F1',\n 'brand-blue': '#3172AD',\n 'graph-primary': '#30CED1',\n 'plot-primary': '#E0BE36',\n 'chart-primary': '#FA8A5B',\n 'story-primary': '#EB526F',\n 'other-primary': '#D8F794'}\n\n\nPlotnine\n\nimport plotnine as pn\nfrom palmerpenguins import load_penguins\n\npenguins_df = load_penguins()\n\npn.ggplot(penguins_df, pn.aes(x='species')) + pn.geom_bar(fill='#69b3a2', color='black', size=0.5) + pn.labs(\n        title='Number of Penguins per Species',\n        x='Species',\n        y='Count'\n    )\n\n/opt/miniconda3/lib/python3.12/site-packages/plotnine/stats/stat_count.py:70: FutureWarning: The provided callable &lt;function sum at 0x104b16160&gt; is currently using DataFrameGroupBy.sum. In a future version of pandas, the provided callable will be used directly. To keep current behavior pass the string \"sum\" instead.\n/opt/miniconda3/lib/python3.12/site-packages/plotnine/stats/stat_count.py:70: FutureWarning: The provided callable &lt;function sum at 0x104b16160&gt; is currently using DataFrameGroupBy.sum. In a future version of pandas, the provided callable will be used directly. To keep current behavior pass the string \"sum\" instead.\n/opt/miniconda3/lib/python3.12/site-packages/plotnine/stats/stat_count.py:70: FutureWarning: The provided callable &lt;function sum at 0x104b16160&gt; is currently using DataFrameGroupBy.sum. In a future version of pandas, the provided callable will be used directly. To keep current behavior pass the string \"sum\" instead."
  },
  {
    "objectID": "posts/2025-08-19_brand-yml/index.html#accessing-_brand.yml-in-python-code.",
    "href": "posts/2025-08-19_brand-yml/index.html#accessing-_brand.yml-in-python-code.",
    "title": "_brand.yml for styling your blog",
    "section": "Accessing _brand.yml in python code….",
    "text": "Accessing _brand.yml in python code….\nHere’s a plotnine chart that would look much nicer with our brand colours:\n\nimport plotnine as pn\nfrom palmerpenguins import load_penguins\n\npenguins_df = load_penguins()\n\npn.ggplot(penguins_df, pn.aes(x='species')) + pn.geom_bar(fill=\"red\", color='black', size=0.5) + pn.labs(\n        title='Number of Penguins per Species',\n        x='Species',\n        y='Count'\n    )\n\n/opt/miniconda3/lib/python3.12/site-packages/plotnine/stats/stat_count.py:70: FutureWarning: The provided callable &lt;function sum at 0x1063de160&gt; is currently using DataFrameGroupBy.sum. In a future version of pandas, the provided callable will be used directly. To keep current behavior pass the string \"sum\" instead.\n/opt/miniconda3/lib/python3.12/site-packages/plotnine/stats/stat_count.py:70: FutureWarning: The provided callable &lt;function sum at 0x1063de160&gt; is currently using DataFrameGroupBy.sum. In a future version of pandas, the provided callable will be used directly. To keep current behavior pass the string \"sum\" instead.\n/opt/miniconda3/lib/python3.12/site-packages/plotnine/stats/stat_count.py:70: FutureWarning: The provided callable &lt;function sum at 0x1063de160&gt; is currently using DataFrameGroupBy.sum. In a future version of pandas, the provided callable will be used directly. To keep current behavior pass the string \"sum\" instead."
  }
]